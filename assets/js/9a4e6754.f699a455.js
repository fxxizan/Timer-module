"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[934],{6997:e=>{e.exports=JSON.parse('{"functions":[{"name":"SetTimerTime","desc":"This function sets the new time of the scoreboard. We usually use this for fixing the client time if the timer stops for a while and then restarts\\nYou might want to note that this automatically adjusts for overflows (e.g trying to set the time to 3:80 will adjust it to 4:20)","params":[{"name":"Minutes","desc":"The minute you want to set the timer to","lua_type":"number"},{"name":"Seconds","desc":"The second you want to set the timer to","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":39,"path":"src/Server/CalculateTime.luau"}},{"name":"StartTimer","desc":"This starts the timer for the client to track\\n\\nNOTE: This doesn\'t account for extra time, you\'ll have to add that yourself","params":[],"returns":[],"function_type":"method","source":{"line":62,"path":"src/Server/CalculateTime.luau"}},{"name":"StopTimer","desc":"Simply stops the timer","params":[],"returns":[],"function_type":"method","source":{"line":93,"path":"src/Server/CalculateTime.luau"}}],"properties":[],"types":[],"name":"TimerModule","desc":"The module that handles starting, stopping and tracking the timer\\r","source":{"line":23,"path":"src/Server/CalculateTime.luau"}}')}}]);